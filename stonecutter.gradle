plugins {
	id "dev.kikugie.stonecutter"
	id 'dev.architectury.loom' version '1.9-SNAPSHOT' apply false
	id 'architectury-plugin' version '3.4-SNAPSHOT' apply false
	id 'com.github.johnrengelman.shadow' version '8.1.1' apply false
}

stonecutter.active "1.21.4" /* [SC] DO NOT EDIT */

/*
stonecutter.parameters(par -> {
	def node = par.node
	if (node == null) {
		par.const("curios", false)
		par.const("trinkets", false)
	} else {
		println(node.project.property("minecraft_version").toString())
		println("trinkets version:")
		println(node.project.property("trinkets_version").toString());
		println("curios version:")
		println(node.project.property("curios_version").toString());
		par.const("trinkets", node.project.property("trinkets_version").toString() != "")
		par.const("curios", node.project.property("curios_version").toString() != "")
	}
})*/

stonecutter.registerChiseled tasks.register("chiseledBuild", stonecutter.chiseled) {
	setGroup "project"
	ofTask "build"
}

/*
tasks.processResources {
	def expandProps = [
		"modJavaVersion"     : prop('mod_java_version'),
		'modId'              : mod_id,
		'modName'            : mod_name,
		'modDescription'     : mod_description,
		'modVersion'         : mod_version,
		'modAuthor'          : mod_author,
		"minecraftVersion"   : prop('minecraft_version'),
		"minMinecraftVersion": prop('min_minecraft_version'),
		"fabricLoaderVersion": prop('fabric_loader_version'),
		"fabricApiVersion"   : prop('fabric_api_version'),
		"neoForgeVersion"    : prop('neoforge_version'),
		"yaclVersion"        : prop('yacl_version'),
	]

	filesMatching(['pack.mcmeta', '*.mixins.json', 'fabric.mod.json', 'META-INF/neoforge.mods.toml']) {
		expand expandProps
	}

	inputs.properties(expandProps)
	duplicatesStrategy = DuplicatesStrategy.INCLUDE
}*/

allprojects {

	repositories {
		mavenCentral()
		mavenLocal()

		// NeoForge
		maven { url 'https://maven.neoforged.net/releases/' }

		// Quilt
		maven { url "https://maven.quiltmc.org/repository/release" }


		// CurseForge
		maven {
			name 'CurseForge'
			url "https://www.cursemaven.com"
		}

		// Modrinth
		maven {
			url "https://api.modrinth.com/maven"
			content {
				includeGroup("maven.modrinth")
			}
		}

		// Mixin Extras
		maven {
			url 'https://jitpack.io'
			content {
				includeGroup 'com.github.llamalad7'
			}
		}

		// Mod Menu.
		maven { url 'https://maven.terraformersmc.com/releases/' }

		// Resourceful lib
		maven {
			url = 'https://nexus.resourcefulbees.com/repository/maven-public/'
			content {
				includeGroup 'com.telepathicgrunt'
				includeGroup 'com.teamresourceful.resourcefullib'
				includeGroup 'com.teamresourceful'
				includeGroup 'earth.terrarium.athena'
			}
		}

		// YACL
		maven { url "https://maven.isxander.dev/releases" }
		maven { url "https://maven.isxander.dev/snapshots" }
		maven { url 'https://thedarkcolour.github.io/KotlinForForge/' }
		maven { url = "https://maven.quiltmc.org/repository/release" }

		// Curios
		maven {
			url = "https://maven.theillusivec4.top/"
		}

		// Curios continuation
		maven {
			name = "OctoStudios"
			url = uri("https://maven.octo-studios.com/releases")
		}

		// Parchment
		maven {
			name = 'ParchmentMC'
			url = 'https://maven.parchmentmc.org'
		}

		// Random
		maven { url "https://oss.sonatype.org/content/repositories/snapshots/" }

		// CCA
		maven {
			name = "Ladysnake Libs"
			url = 'https://maven.ladysnake.org/releases'
		}

		// DevAuth
		maven { url = "https://pkgs.dev.azure.com/djtheredstoner/DevAuth/_packaging/public/maven/v1" }
	}
}