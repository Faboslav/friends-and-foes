plugins {
	id "com.github.johnrengelman.shadow" version "8.1.1"
}

allprojects {
	archivesBaseName = "${rootProject.mod_id}-forge-mc${rootProject.minecraft_version}"
}

loom {
	accessWidenerPath = project(":common").loom.accessWidenerPath

	forge {
		convertAccessWideners = true
		extraAccessWideners.add loom.accessWidenerPath.get().asFile.name
		mixinConfig "friendsandfoes-common.mixins.json"
		mixinConfig "friendsandfoes-forge.mixins.json"
	}
}

architectury {
	platformSetupLoomIde()
	forge()
}

configurations {
	common
	shadowCommon
	compileClasspath.extendsFrom common
	runtimeClasspath.extendsFrom common
	developmentForge.extendsFrom common
}

dependencies {
	forge "net.minecraftforge:forge:${rootProject.minecraft_version}-${rootProject.forge_version}"

	common(project(path: ":common", configuration: "namedElements")) { transitive false }
	shadowCommon(project(path: ":common", configuration: "transformProductionForge")) { transitive = false }

	// Mixin extras (https://github.com/LlamaLad7/MixinExtras)
	implementation(annotationProcessor("io.github.llamalad7:mixinextras-common:${rootProject.mixin_extras_version}"))
	implementation(include("io.github.llamalad7:mixinextras-forge:${rootProject.mixin_extras_version}"))

	// Curios (https://www.curseforge.com/minecraft/mc-mods/curios)
	modImplementation("top.theillusivec4.curios:curios-forge:${project.curios_version}+${rootProject.minecraft_version}:api")
	modRuntimeOnly("top.theillusivec4.curios:curios-forge:${project.curios_version}+${rootProject.minecraft_version}");

	// Cloth config (https://www.curseforge.com/minecraft/mc-mods/cloth-config)
	modImplementation("me.shedaniel.cloth:cloth-config-forge:${rootProject.cloth_config_version}")
}

processResources {
	inputs.property "modId", rootProject.mod_id
	inputs.property "modVersion", rootProject.mod_version
	inputs.property "modName", rootProject.mod_name
	inputs.property "modDescription", rootProject.mod_description
	inputs.property "modAuthor", rootProject.mod_author
	inputs.property "minecraftVersion", rootProject.minecraft_version
	inputs.property "forgeVersion", rootProject.forge_version

	filesMatching("META-INF/mods.toml") {
		expand "modId": rootProject.mod_id,
			"modVersion": rootProject.mod_version,
			"modName": rootProject.mod_name,
			"modDescription": rootProject.mod_description,
			"modAuthor": rootProject.mod_author,
			"minecraftVersion": rootProject.minecraft_version,
			"forgeVersion": rootProject.forge_version
	}
}

shadowJar {
	exclude "fabric.mod.json"
	exclude "architectury.common.json"

	configurations = [project.configurations.shadowCommon]
	archiveClassifier.set("dev-shadow")
}

remapJar {
	inputFile.set shadowJar.archiveFile
	dependsOn shadowJar
	archiveClassifier.set(null)
}

jar {
	archiveClassifier.set("dev")
}

sourcesJar {
	def commonSources = project(":common").sourcesJar
	dependsOn commonSources
	from commonSources.archiveFile.map { zipTree(it) }
}

components.java {
	withVariantsFromConfiguration(project.configurations.shadowRuntimeElements) {
		skip()
	}
}

repositories {
	maven {
		url = "https://maven.theillusivec4.top/"
	}

	maven { url "https://www.cursemaven.com" }

	maven { url = "https://pkgs.dev.azure.com/djtheredstoner/DevAuth/_packaging/public/maven/v1" }
}
